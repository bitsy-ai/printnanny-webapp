on: 
  push:
    branches: [ main, devel ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'INFO'
      plugin_version:
        description: 'Commitish or branch of the OctoPrint Nanny plugin to install in sandbox'
        default: 'devel'
        required: true
      octoprint_version:
        description: 'OctoPrint version to install in sandbox'
        default: 'latest'
      fixtures:
        description: 'Load default fixture data?'
        default: true
        required: true
      user:
        description: 'Username'
        required: true
        default: sandbox
      purge_data:
        description: 'Purge database and persistent volumes'
        default: false
        required: true
env:
  PRINT_NANNY_USER: ${{ github.event.inputs.user }}
  DJANGO_SUPERUSER_PASSWORD: ${{ secrets.SANDBOX_DJANGO_SUPERUSER_PASSWORD }}
  PRINT_NANNY_URL: https://webapp.sandbox.print-nanny.com/
  PRINT_NANNY_WS_URL: wss://webapp.sandbox.print-nanny.com/ws
  PRINT_NANNY_STATIC_URL: https://webapp.sandbox.print-nanny.com/static/
  OCTOPRINT_URL: https://octoprint.sandbox.print-nanny.com
  DJANGO_SUPERUSER_EMAIL: ${{ github.event.inputs.user }}@print-nanny.com
  DJANGO_SECRET_KEY: ${{ secrets.SANDBOX_DJANGO_SECRET_KEY }}
  STRIPE_PUBLIC_KEY: ${{ secrets.SANDBOX_STRIPE_PUBLIC_KEY }}
  STRIPE_SECRET_KEY: ${{ secrets.SANDBOX_STRIPE_SECRET_KEY }}
  MAILGUN_API_KEY: ${{ secrets.SANDBOX_MAILGUN_API_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.SANDBOX_MAILGUN_DOMAIN }}
  DISCORD_TOKEN: ${{ secrets.SANDBOX_DISCORD_TOKEN }}
  HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.SANDBOX_GCP_SERVICE_ACCOUNT_KEY }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.SANDBOX_GCP_SERVICE_ACCOUNT }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  DATABASE_URL: ${{ secrets.SANDBOX_DATABASE_URL }}
  COTURN_DATABASE_URL: ${{ secrets.SANDBOX_COTURN_DATABASE_URL }}
  COTURN_SECRET_KEY: ${{ secrets.SANDBOX_COTURN_SECRET_KEY }}
  DJSTRIPE_WEBHOOK_SECRET: ${{ secrets.SANDBOX_DJSTRIPE_WEBHOOK_SECRET }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Input Settings
      run: |
        echo "User: ${{ github.event.inputs.user }}" 
        echo "Branch: ${{ github.event.inputs.branch }}"
        echo "Loglevel: ${{ github.event.inputs.loglevel }}"
        echo "Plugin Version: ${{ github.event.inputs.plugin_version }}"
        echo "Octoprint Version: ${{ github.event.inputs.octoprint_version }}"
        echo "Load fixture data: ${{ github.event.inputs.fixtures }}"
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Install system dependencies
      run: |
        sudo apt-get install makepasswd
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Write deploy key
      run: echo $GCP_SERVICE_ACCOUNT_KEY > key.json
    - name: Active Service Account
      run: gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=key.json
    - name: Configure docker registry credentials
      run: gcloud auth configure-docker
    - name: Purge data & persistent volumes
      if: ${{ github.event.inputs.purge_data == true }}
      run: make sandbox-pv-clean
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true
    - name: Deploy sandbox instance
      run: |
        make sandbox-deploy \
        PROJECT="print-nanny-sandbox" \
        PRINT_NANNY_USER="${{ github.event.inputs.user }}" \
        PRINT_NANNY_URL="$PRINT_NANNY_URL" \
        OCTOPRINT_URL="$OCTOPRINT_URL" \
        DJANGO_SUPERUSER_EMAIL="$DJANGO_SUPERUSER_EMAIL"
    - name: Send Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Deployed {{ EVENT_PAYLOAD.repository.full_name }}@{{ GITHUB_SHA }} to SANDBOX environment'
    # - name: Run Cypress tests 
    #   run: |
    #     make cypress-ci \
    #     PROJECT="print-nanny-sandbox" \
    #     PRINT_NANNY_USER="${{ github.event.inputs.user }}" \
    #     PRINT_NANNY_URL="$PRINT_NANNY_URL" \
    #     OCTOPRINT_URL="$OCTOPRINT_URL" \
    #     DJANGO_SUPERUSER_EMAIL="$DJANGO_SUPERUSER_EMAIL"
    # - name: Show kube deployment logs
    #   run: |
    #     make sandbox-logs