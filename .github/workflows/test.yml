name: Pytest and Cypress

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
  DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
  CYPRESS_BASE_URL: "http://localhost:8000"
  NKEYS_PATH: /var/lib/nats/nsc/keys
  NSC_HOME: /var/lib/nats/nsc
  NSC_STORE: /var/lib/nats/nsc/stores
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  GIT_SHA: ${{ github.sha }}
  GIT_BRANCH: ${{ github.ref }}
  STRIPE_TEST_PUBLIC_KEY: ${{ secrets.STRIPE_TEST_PUBLIC_KEY }}
  STRIPE_TEST_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
# Docker Image cache from: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
jobs:
  docker-image:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHubP
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./compose/local/django/Dockerfile
          tags: bitsyai/printnanny-webapp:${{ github.sha }}
  cypress:
    needs: docker-image
    environment: test

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Start Django Webapp
        run: |
          make ci-up
          cd clients/typescript && npm install && npm run build
          cd ../../ui && npm install && npm ci-test-build
          make ci-collectstatic

      - uses: cypress-io/github-action@v4

        with:
          wait-on: "http://localhost:8000"
          working-directory: ui
          timeout-minutes: 5
          install: false
  pytest:
    needs: docker-image
    environment: test

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Pytest
        run: |
          make ci-pytest
