name: Pytest and Cypress

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
  DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
  NKEYS_PATH: /var/lib/nats/nsc/keys
  NSC_HOME: /var/lib/nats/nsc
  NSC_STORE: /var/lib/nats/nsc/stores
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  STRIPE_TEST_PUBLIC_KEY: ${{ secrets.STRIPE_TEST_PUBLIC_KEY }}
  STRIPE_TEST_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
# Docker Image cache from: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
jobs:
  docker-image:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            name=bitsyai/printnanny-webapp
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long,prefix=sha-
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHubP
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./compose/local/django/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha

  cypress:
    needs: docker-image
    environment: test

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install platform deps
        run: |
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - name: Run Cypress tests
        env:
          PRINTNANNY_WEBAPP_TAG: sha-${{ github.sha }}
        run: |
          make ci-up
          cd clients/typescript && npm install && npm run build
          cd ../../ui && npm install && npm run ci-test-build
          npm run ci-webapp-wait
          npm run test:e2e:ci

      # - uses: cypress-io/github-action@v4
      #   timeout-minutes: 8
      #   env:
      #     PRINTNANNY_WEBAPP_TAG: sha-${{ github.sha }}
      #     CYPRESS_BASE_URL: "http://localhost:8000"
      #     DEBUG: "@cypress/github-action"

      #   with:
      #     wait-on: "http://localhost:8000"
      #     start: npm run ci-webapp
      #     build: npx cypress info
      #     working-directory: ui
      #     record: false
  pytest:
    needs: docker-image
    environment: test

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Pytest
        env:
          PRINTNANNY_WEBAPP_TAG: sha-${{ github.sha }}
        run: |
          make ci-pytest
