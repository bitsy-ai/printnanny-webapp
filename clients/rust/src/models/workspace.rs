/*
 * printnanny-api-client
 *
 * Official API client library for printnanny.ai
 *
 * The version of the OpenAPI document: 0.135.1
 * Contact: leigh@printnanny.ai
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Workspace {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "users")]
    pub users: Vec<crate::models::User>,
    #[serde(rename = "owner")]
    pub owner: Option<Box<crate::models::WorkspaceOwner>>,
    #[serde(rename = "pending_invites")]
    pub pending_invites: Vec<crate::models::WorkspaceInvite>,
    /// The name of the organization
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "is_active", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "modified")]
    pub modified: String,
    /// The name in all lowercase, suitable for URL identification
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
}

impl Workspace {
    pub fn new(id: i32, users: Vec<crate::models::User>, owner: Option<crate::models::WorkspaceOwner>, pending_invites: Vec<crate::models::WorkspaceInvite>, name: String, created: String, modified: String, slug: String, description: String) -> Workspace {
        Workspace {
            id,
            users,
            owner: owner.map(Box::new),
            pending_invites,
            name,
            is_active: None,
            created,
            modified,
            slug,
            description,
            icon: None,
        }
    }
}


