/*
 * printnanny-api-client
 *
 * Official API client library for printnanny.ai
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: leigh@printnanny.ai
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BillingSummary {
    #[serde(rename = "subscription")]
    pub subscription: Box<crate::models::StripeSubscription>,
    #[serde(rename = "charges")]
    pub charges: Vec<crate::models::StripeCharge>,
    #[serde(rename = "events")]
    pub events: Vec<crate::models::StripeEvent>,
    #[serde(rename = "next_invoice", skip_serializing_if = "Option::is_none")]
    pub next_invoice: Option<Box<crate::models::StripeNextInvoice>>,
    #[serde(rename = "customer")]
    pub customer: Box<crate::models::StripeCustomer>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::User>>,
    #[serde(rename = "billing_portal_url")]
    pub billing_portal_url: String,
}

impl BillingSummary {
    pub fn new(subscription: crate::models::StripeSubscription, charges: Vec<crate::models::StripeCharge>, events: Vec<crate::models::StripeEvent>, customer: crate::models::StripeCustomer, billing_portal_url: String) -> BillingSummary {
        BillingSummary {
            subscription: Box::new(subscription),
            charges,
            events,
            next_invoice: None,
            customer: Box::new(customer),
            user: None,
            billing_portal_url,
        }
    }
}


