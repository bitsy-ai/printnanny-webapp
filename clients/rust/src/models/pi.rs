/*
 * printnanny-api-client
 *
 * Official API client library for printnanny.ai
 *
 * The version of the OpenAPI document: 0.123.1
 * Contact: leigh@printnanny.ai
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Pi {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "last_boot")]
    pub last_boot: Option<String>,
    #[serde(rename = "network_settings")]
    pub network_settings: Box<crate::models::NetworkSettings>,
    #[serde(rename = "user")]
    pub user: Box<crate::models::User>,
    #[serde(rename = "system_info")]
    pub system_info: Box<crate::models::SystemInfo>,
    #[serde(rename = "webrtc_edge")]
    pub webrtc_edge: Box<crate::models::WebrtcStream>,
    #[serde(rename = "webrtc_cloud")]
    pub webrtc_cloud: Box<crate::models::WebrtcStream>,
    #[serde(rename = "octoprint_server")]
    pub octoprint_server: Box<crate::models::OctoPrintServer>,
    #[serde(rename = "nats_app")]
    pub nats_app: Box<crate::models::PiNatsApp>,
    #[serde(rename = "urls")]
    pub urls: Box<crate::models::PiUrls>,
    #[serde(rename = "shortname_urls")]
    pub shortname_urls: Box<crate::models::PiUrls>,
    #[serde(rename = "mdns_urls")]
    pub mdns_urls: Box<crate::models::PiUrls>,
    #[serde(rename = "sbc", skip_serializing_if = "Option::is_none")]
    pub sbc: Option<crate::models::SbcEnum>,
    #[serde(rename = "created_dt")]
    pub created_dt: String,
    /// Please enter the hostname you set in the Raspberry Pi Imager's Advanced Options menu (without .local extension)
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    #[serde(rename = "favorite", skip_serializing_if = "Option::is_none")]
    pub favorite: Option<bool>,
    #[serde(rename = "setup_finished", skip_serializing_if = "Option::is_none")]
    pub setup_finished: Option<bool>,
}

impl Pi {
    pub fn new(id: i32, last_boot: Option<String>, network_settings: crate::models::NetworkSettings, user: crate::models::User, system_info: crate::models::SystemInfo, webrtc_edge: crate::models::WebrtcStream, webrtc_cloud: crate::models::WebrtcStream, octoprint_server: crate::models::OctoPrintServer, nats_app: crate::models::PiNatsApp, urls: crate::models::PiUrls, shortname_urls: crate::models::PiUrls, mdns_urls: crate::models::PiUrls, created_dt: String) -> Pi {
        Pi {
            id,
            last_boot,
            network_settings: Box::new(network_settings),
            user: Box::new(user),
            system_info: Box::new(system_info),
            webrtc_edge: Box::new(webrtc_edge),
            webrtc_cloud: Box::new(webrtc_cloud),
            octoprint_server: Box::new(octoprint_server),
            nats_app: Box::new(nats_app),
            urls: Box::new(urls),
            shortname_urls: Box::new(shortname_urls),
            mdns_urls: Box::new(mdns_urls),
            sbc: None,
            created_dt,
            hostname: None,
            favorite: None,
            setup_finished: None,
        }
    }
}


