/*
 * printnanny-api-client
 *
 * Official API client library for printnanny.ai
 *
 * The version of the OpenAPI document: 0.134.0
 * Contact: leigh@printnanny.ai
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DemoSubmission {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "created_dt")]
    pub created_dt: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "submission")]
    pub submission: String,
    #[serde(rename = "result")]
    pub result: String,
    #[serde(rename = "feedback_nozzle", skip_serializing_if = "Option::is_none")]
    pub feedback_nozzle: Option<Box<crate::models::OneOfDemoFeedbackEnumNullEnum>>,
    #[serde(rename = "feedback_adhesion", skip_serializing_if = "Option::is_none")]
    pub feedback_adhesion: Option<Box<crate::models::OneOfDemoFeedbackEnumNullEnum>>,
    #[serde(rename = "feedback_spaghetti", skip_serializing_if = "Option::is_none")]
    pub feedback_spaghetti: Option<Box<crate::models::OneOfDemoFeedbackEnumNullEnum>>,
    #[serde(rename = "feedback_print", skip_serializing_if = "Option::is_none")]
    pub feedback_print: Option<Box<crate::models::OneOfDemoFeedbackEnumNullEnum>>,
    #[serde(rename = "feedback_raft", skip_serializing_if = "Option::is_none")]
    pub feedback_raft: Option<Box<crate::models::OneOfDemoFeedbackEnumNullEnum>>,
}

impl DemoSubmission {
    pub fn new(id: String, created_dt: String, email: String, submission: String, result: String) -> DemoSubmission {
        DemoSubmission {
            id,
            created_dt,
            email,
            submission,
            result,
            feedback_nozzle: None,
            feedback_adhesion: None,
            feedback_spaghetti: None,
            feedback_print: None,
            feedback_raft: None,
        }
    }
}


