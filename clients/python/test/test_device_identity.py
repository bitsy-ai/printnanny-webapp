# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.0
    Contact: leigh@bitsy.ai
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import print_nanny_client
from print_nanny_client.models.device_identity import DeviceIdentity  # noqa: E501
from print_nanny_client.rest import ApiException

class TestDeviceIdentity(unittest.TestCase):
    """DeviceIdentity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DeviceIdentity
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = print_nanny_client.models.device_identity.DeviceIdentity()  # noqa: E501
        if include_optional :
            return DeviceIdentity(
                ca_certs = print_nanny_client.models.device_identity_ca_certs.DeviceIdentity_ca_certs(
                    primary = '', 
                    primary_checksum = '', 
                    backup = '', 
                    backup_checksum = '', ), 
                cloudiot_device_name = '', 
                cloudiot_device_num_id = -9223372036854775808, 
                cloudiot_device_path = '', 
                cores = -2147483648, 
                cpu_flags = [
                    ''
                    ], 
                created_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                fingerprint = '', 
                hardware = '', 
                id = 56, 
                kernel_version = '', 
                model = '', 
                name = '', 
                os_version = '', 
                os = '', 
                private_key_checksum = '', 
                private_key = '', 
                public_key_checksum = '', 
                public_key = '', 
                ram = -9223372036854775808, 
                revision = '', 
                serial = '', 
                updated_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                url = '', 
                user = 56
            )
        else :
            return DeviceIdentity(
                ca_certs = print_nanny_client.models.device_identity_ca_certs.DeviceIdentity_ca_certs(
                    primary = '', 
                    primary_checksum = '', 
                    backup = '', 
                    backup_checksum = '', ),
                cloudiot_device_name = '',
                cloudiot_device_num_id = -9223372036854775808,
                cloudiot_device_path = '',
                cores = -2147483648,
                cpu_flags = [
                    ''
                    ],
                created_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                fingerprint = '',
                id = 56,
                kernel_version = '',
                name = '',
                os_version = '',
                os = '',
                private_key_checksum = '',
                private_key = '',
                public_key_checksum = '',
                public_key = '',
                ram = -9223372036854775808,
                updated_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                user = 56,
        )

    def testDeviceIdentity(self):
        """Test DeviceIdentity"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
