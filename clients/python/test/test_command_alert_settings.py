# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.0
    Contact: leigh@bitsy.ai
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import print_nanny_client
from print_nanny_client.models.command_alert_settings import CommandAlertSettings  # noqa: E501
from print_nanny_client.rest import ApiException

class TestCommandAlertSettings(unittest.TestCase):
    """CommandAlertSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CommandAlertSettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = print_nanny_client.models.command_alert_settings.CommandAlertSettings()  # noqa: E501
        if include_optional :
            return CommandAlertSettings(
                id = 56, 
                created_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                alert_type = 'COMMAND', 
                alert_methods = [
                    'UI'
                    ], 
                enabled = True, 
                snapshot = [
                    'RECEIVED'
                    ], 
                stop_monitoring = [
                    'RECEIVED'
                    ], 
                start_monitoring = [
                    'RECEIVED'
                    ], 
                stop_print = [
                    'RECEIVED'
                    ], 
                start_print = [
                    'RECEIVED'
                    ], 
                move_nozzle = [
                    'RECEIVED'
                    ], 
                pause_print = [
                    'RECEIVED'
                    ], 
                resume_print = [
                    'RECEIVED'
                    ], 
                polymorphic_ctype = 56, 
                user = 56
            )
        else :
            return CommandAlertSettings(
                alert_type = 'COMMAND',
        )

    def testCommandAlertSettings(self):
        """Test CommandAlertSettings"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
