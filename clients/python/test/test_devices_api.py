# coding: utf-8

"""

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.0
    Contact: leigh@bitsy.ai
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import print_nanny_client
from print_nanny_client.api.devices_api import DevicesApi  # noqa: E501
from print_nanny_client.rest import ApiException


class TestDevicesApi(unittest.TestCase):
    """DevicesApi unit test stubs"""

    def setUp(self):
        self.api = print_nanny_client.api.devices_api.DevicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_devices_cameras_create(self):
        """Test case for devices_cameras_create

        """
        pass

    def test_devices_cameras_list(self):
        """Test case for devices_cameras_list

        """
        pass

    def test_devices_cameras_partial_update(self):
        """Test case for devices_cameras_partial_update

        """
        pass

    def test_devices_cameras_retrieve(self):
        """Test case for devices_cameras_retrieve

        """
        pass

    def test_devices_cameras_update(self):
        """Test case for devices_cameras_update

        """
        pass

    def test_devices_cloud_iot_devices_create(self):
        """Test case for devices_cloud_iot_devices_create

        """
        pass

    def test_devices_cloud_iot_devices_list(self):
        """Test case for devices_cloud_iot_devices_list

        """
        pass

    def test_devices_cloud_iot_devices_partial_update(self):
        """Test case for devices_cloud_iot_devices_partial_update

        """
        pass

    def test_devices_cloud_iot_devices_retrieve(self):
        """Test case for devices_cloud_iot_devices_retrieve

        """
        pass

    def test_devices_cloud_iot_devices_update(self):
        """Test case for devices_cloud_iot_devices_update

        """
        pass

    def test_devices_create(self):
        """Test case for devices_create

        """
        pass

    def test_devices_current_state_list(self):
        """Test case for devices_current_state_list

        """
        pass

    def test_devices_current_state_retrieve(self):
        """Test case for devices_current_state_retrieve

        """
        pass

    def test_devices_desired_config_list(self):
        """Test case for devices_desired_config_list

        """
        pass

    def test_devices_desired_config_retrieve(self):
        """Test case for devices_desired_config_retrieve

        """
        pass

    def test_devices_keypairs_create(self):
        """Test case for devices_keypairs_create

        """
        pass

    def test_devices_keypairs_list(self):
        """Test case for devices_keypairs_list

        """
        pass

    def test_devices_keypairs_retrieve(self):
        """Test case for devices_keypairs_retrieve

        """
        pass

    def test_devices_list(self):
        """Test case for devices_list

        """
        pass

    def test_devices_partial_update(self):
        """Test case for devices_partial_update

        """
        pass

    def test_devices_printer_controllers_create(self):
        """Test case for devices_printer_controllers_create

        """
        pass

    def test_devices_printer_controllers_list(self):
        """Test case for devices_printer_controllers_list

        """
        pass

    def test_devices_printer_controllers_partial_update(self):
        """Test case for devices_printer_controllers_partial_update

        """
        pass

    def test_devices_printer_controllers_retrieve(self):
        """Test case for devices_printer_controllers_retrieve

        """
        pass

    def test_devices_printer_controllers_update(self):
        """Test case for devices_printer_controllers_update

        """
        pass

    def test_devices_retrieve(self):
        """Test case for devices_retrieve

        """
        pass

    def test_devices_retrieve_hostname(self):
        """Test case for devices_retrieve_hostname

        """
        pass

    def test_devices_update(self):
        """Test case for devices_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
