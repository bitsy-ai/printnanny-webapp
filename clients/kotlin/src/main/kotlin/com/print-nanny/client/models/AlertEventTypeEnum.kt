/**
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.print-nanny.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: test,videoDone,printHealth,printProgress,printDone,printFailed,printPaused,printResumed,printStarted,printCancelled,shutdown,startup,connected,disconnected
 */

enum class AlertEventTypeEnum(val value: kotlin.String) {

    @Json(name = "Test")
    test("Test"),

    @Json(name = "VideoDone")
    videoDone("VideoDone"),

    @Json(name = "PrintHealth")
    printHealth("PrintHealth"),

    @Json(name = "PrintProgress")
    printProgress("PrintProgress"),

    @Json(name = "PrintDone")
    printDone("PrintDone"),

    @Json(name = "PrintFailed")
    printFailed("PrintFailed"),

    @Json(name = "PrintPaused")
    printPaused("PrintPaused"),

    @Json(name = "PrintResumed")
    printResumed("PrintResumed"),

    @Json(name = "PrintStarted")
    printStarted("PrintStarted"),

    @Json(name = "PrintCancelled")
    printCancelled("PrintCancelled"),

    @Json(name = "Shutdown")
    shutdown("Shutdown"),

    @Json(name = "Startup")
    startup("Startup"),

    @Json(name = "Connected")
    connected("Connected"),

    @Json(name = "Disconnected")
    disconnected("Disconnected");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: Any?): kotlin.String? = if (data is AlertEventTypeEnum) "$data" else null

        /**
         * Returns a valid [AlertEventTypeEnum] for [data], null otherwise.
         */
        fun decode(data: Any?): AlertEventTypeEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

