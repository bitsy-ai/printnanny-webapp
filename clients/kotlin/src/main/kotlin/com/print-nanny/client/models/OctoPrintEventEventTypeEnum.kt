/**
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.print-nanny.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: clientAuthed,clientClosed,clientDeauthed,clientOpened,settingsUpdated,userLoggedIn,userLoggedOut,fileAdded,fileRemoved,folderAdded,folderRemoved,transferDone,transferFailed,transferStarted,updatedFiles,upload,captureDone,captureFailed,captureStart,movieDone,movieFailed,movieRendering,postRollEnd,postRollStart,slicingCancelled,slicingDone,slicingFailed,slicingProfileAdded,slicingProfileDeleted,slicingProfileModified,slicingStarted,printerProfileAdded,printerProfileDeleted,printerProfileModified,printProgress,pluginPiSupportThrottleState,shutdown,startup
 */

enum class OctoPrintEventEventTypeEnum(val value: kotlin.String) {

    @Json(name = "ClientAuthed")
    clientAuthed("ClientAuthed"),

    @Json(name = "ClientClosed")
    clientClosed("ClientClosed"),

    @Json(name = "ClientDeauthed")
    clientDeauthed("ClientDeauthed"),

    @Json(name = "ClientOpened")
    clientOpened("ClientOpened"),

    @Json(name = "SettingsUpdated")
    settingsUpdated("SettingsUpdated"),

    @Json(name = "UserLoggedIn")
    userLoggedIn("UserLoggedIn"),

    @Json(name = "UserLoggedOut")
    userLoggedOut("UserLoggedOut"),

    @Json(name = "FileAdded")
    fileAdded("FileAdded"),

    @Json(name = "FileRemoved")
    fileRemoved("FileRemoved"),

    @Json(name = "FolderAdded")
    folderAdded("FolderAdded"),

    @Json(name = "FolderRemoved")
    folderRemoved("FolderRemoved"),

    @Json(name = "TransferDone")
    transferDone("TransferDone"),

    @Json(name = "TransferFailed")
    transferFailed("TransferFailed"),

    @Json(name = "TransferStarted")
    transferStarted("TransferStarted"),

    @Json(name = "UpdatedFiles")
    updatedFiles("UpdatedFiles"),

    @Json(name = "Upload")
    upload("Upload"),

    @Json(name = "CaptureDone")
    captureDone("CaptureDone"),

    @Json(name = "CaptureFailed")
    captureFailed("CaptureFailed"),

    @Json(name = "CaptureStart")
    captureStart("CaptureStart"),

    @Json(name = "MovieDone")
    movieDone("MovieDone"),

    @Json(name = "MovieFailed")
    movieFailed("MovieFailed"),

    @Json(name = "MovieRendering")
    movieRendering("MovieRendering"),

    @Json(name = "PostRollEnd")
    postRollEnd("PostRollEnd"),

    @Json(name = "PostRollStart")
    postRollStart("PostRollStart"),

    @Json(name = "SlicingCancelled")
    slicingCancelled("SlicingCancelled"),

    @Json(name = "SlicingDone")
    slicingDone("SlicingDone"),

    @Json(name = "SlicingFailed")
    slicingFailed("SlicingFailed"),

    @Json(name = "SlicingProfileAdded")
    slicingProfileAdded("SlicingProfileAdded"),

    @Json(name = "SlicingProfileDeleted")
    slicingProfileDeleted("SlicingProfileDeleted"),

    @Json(name = "SlicingProfileModified")
    slicingProfileModified("SlicingProfileModified"),

    @Json(name = "SlicingStarted")
    slicingStarted("SlicingStarted"),

    @Json(name = "PrinterProfileAdded")
    printerProfileAdded("PrinterProfileAdded"),

    @Json(name = "PrinterProfileDeleted")
    printerProfileDeleted("PrinterProfileDeleted"),

    @Json(name = "PrinterProfileModified")
    printerProfileModified("PrinterProfileModified"),

    @Json(name = "PrintProgress")
    printProgress("PrintProgress"),

    @Json(name = "plugin_pi_support_throttle_state")
    pluginPiSupportThrottleState("plugin_pi_support_throttle_state"),

    @Json(name = "Shutdown")
    shutdown("Shutdown"),

    @Json(name = "Startup")
    startup("Startup");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: Any?): kotlin.String? = if (data is OctoPrintEventEventTypeEnum) "$data" else null

        /**
         * Returns a valid [OctoPrintEventEventTypeEnum] for [data], null otherwise.
         */
        fun decode(data: Any?): OctoPrintEventEventTypeEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

