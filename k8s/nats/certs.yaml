# sign a namespaced Issuer certificate with LetsEncrypt ClusterIssuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-ca
  namespace: nats

spec:
  secretName: nats-ca
  duration: 8736h # 1 year
  renewBefore: 240h # 10 days
  isCA: true

  issuerRef:
    name: letsencrypt-dns-issuer
    kind: ClusterIssuer

  # indicate nats-ca should only be used for signing
  # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.KeyUsage
  usages:
    - cert sign
  dnsNames:
    - nats.live.printnanny.ai
    - nats.printnanny.ai
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: nats-ca
  namespace: nats
spec:
  ca:
    secretName: nats-ca

# client-facing NATS server tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-server-tls
  namespace: nats
spec:
  secretName: nats-server-tls
  duration: 2160h # 90 days
  renewBefore: 240h # 10 days
  issuerRef:
    name: nats-ca
    kind: Issuer
  usages:
    - signing
    - key encipherment
    - server auth
  dnsNames:
    - nats.live.printnanny.ai
    - nats.printnanny.ai
# TODO: enable for NATS operator $CLUSTER-mgmt internal service routes
# ref: https://docs.nats.io/running-a-nats-service/nats-kubernetes/nats-cluster-and-cert-manager
# ---
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: nats-routes-tls
# spec:
#   secretName: nats-routes-tls
#   duration: 2160h # 90 days
#   renewBefore: 240h # 10 days
#   issuerRef:
#     name: nats-ca
#     kind: Issuer
#   usages:
#     - signing
#     - key encipherment
#     - server auth
#     - client auth
#   organization:
#     - Your organization
#   commonName: "*.nats-mgmt.default.svc.cluster.local"
#   dnsNames:
#     - "*.nats-mgmt.default.svc"
