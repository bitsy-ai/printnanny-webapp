---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "octoprint-pv-claim"
  labels:
    app: octoprint
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "postgres-pv-claim"
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "postgres"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "postgres"
      branch: "{{ GIT_BRANCH }}"
      owner: "{{ PRINT_NANNY_USER }}"
  template:
    metadata:
      labels: 
        branch: "{{ GIT_BRANCH }}"
        owner: "{{ PRINT_NANNY_USER }}"
        app: "postgres"
    spec:
      containers:
      - name: postgres
        image: postgres:12.3
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: 5432
        envFrom:
          - configMapRef:
              name: "sandbox-config"
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: "postgres-pv-claim"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "print-nanny-sandbox"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "print-nanny-sandbox"
      branch: "{{ GIT_BRANCH }}"
      owner: "{{ PRINT_NANNY_USER }}"
  template:
    metadata:
      labels:
        branch: "{{ GIT_BRANCH }}"
        owner: "{{ PRINT_NANNY_USER }}"
        app: "sandbox"
    spec:
      serviceAccountName: webapp
      containers:
      - name: redis
        image: redis:6.2
      - name: celery-worker
        imagePullPolicy: Always
        image: us.gcr.io/print-nanny-sandbox/print_nanny_webapp:{{ GIT_SHA }}
        command:
          - /start-celeryworker
        envFrom:
          - configMapRef:
              name: "sandbox-config"
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: celery-worker
      - name: octoprint-events
        imagePullPolicy: Always
        command:
          - python
          - print_nanny_webapp/telemetry/subscribers/octoprint_events.py
        image: us.gcr.io/print-nanny-sandbox/print_nanny_webapp:{{ GIT_SHA }}
        envFrom:
          - configMapRef:
              name: "sandbox-config"
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: octoprint-events
      - name: django
        imagePullPolicy: Always
        image: us.gcr.io/print-nanny-sandbox/print_nanny_webapp:{{ GIT_SHA }}
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        command:
          - /start
        envFrom:
          - configMapRef:
              name: "sandbox-config"
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: django
---
apiVersion: v1
kind: Service
metadata:
  name: django
spec:
  selector:
    app: print-nanny-sandbox
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: "postgres"
spec:
  selector:
    app: "postgres"
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: NodePort
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: http-to-https
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: django
  annotations:
    networking.gke.io/v1beta1.FrontendConfig: "http-to-https"
    kubernetes.io/ingress.global-static-ip-name: "print-nanny-static-ip"
    networking.gke.io/managed-certificates: "sandbox-print-nanny-com-tls"
spec:
  backend:
    serviceName: django
    servicePort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp
  annotations:
    iam.gke.io/gcp-service-account: webapp@print-nanny-sandbox.iam.gserviceaccount.com