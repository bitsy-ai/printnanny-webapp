---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ PRINTNANNY_NAMESPACE }}
  name: ara
  annotations:
    iam.gke.io/gcp-service-account: ara--{{ PRINTNANNY_NAMESPACE }}@{{ GCP_PROJECT }}.iam.gserviceaccount.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ PRINTNANNY_NAMESPACE }}
  name: ara
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ara
  template:
    metadata:
      labels:
        app: ara
    spec:
      serviceAccountName: ara
      containers:
      - name: ara
        imagePullPolicy: Always
        image: us.gcr.io/print-nanny/ara:fedora33-source-latest
        livenessProbe:
          httpGet:
            path: /healthcheck/ # root path serves 302 (login) which is not followed by health check
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /healthcheck/ # root path serves 302 (login) which is not followed by health check
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        envFrom:
          - configMapRef:
              name: "ara-config"
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          - "-quiet"
          - "-verbose=false"
          - "-instances=print-nanny:us-central1:print-nanny=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        ports:
          - containerPort: 5432
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  namespace: {{ PRINTNANNY_NAMESPACE }}
  name: ara-backendconfig
spec:
  healthCheck:
    checkIntervalSec: 15
    port: 8000
    type: HTTP
    requestPath: /healthcheck/
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ PRINTNANNY_NAMESPACE }}
  name: ara
  annotations:
    cloud.google.com/backend-config: '{"default": "ara-backendconfig"}'
spec:
  selector:
    app: ara
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: NodePort