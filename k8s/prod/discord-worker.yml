---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discord-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discord-worker
  template:
    metadata:
      labels:
        app: discord-worker
    spec:
      serviceAccountName: webapp
      containers:
      - name: discord-worker
        imagePullPolicy: Always
        command:
          - python
          - manage.py
          - runworker
          - discord
        image: us.gcr.io/print-nanny/print_nanny_webapp:latest
        ports:
        - containerPort: 8000
        - containerPort: 8001
        envFrom:
          - configMapRef:
              name: webapp
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: discord-worker
        volumeMounts:
        - name: webapp-service-account
          mountPath: /etc/service-account
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.29.0
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=print-nanny:us-central1:print-nanny=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        ports:
          - containerPort: 5432
      volumes:
        - name: webapp-service-account
          secret:
            secretName: webapp-service-account