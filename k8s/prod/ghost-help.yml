apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  name: print-nanny-help
spec:
  replicas: 1
  selector:
    matchLabels:
      app: print-nanny-help
  serviceName: print-nanny-help
  template:
    metadata:
      labels:
        app: print-nanny-help
    spec:
      serviceAccountName: ghost-site
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.29
        command:
          - "/cloud_sql_proxy"
          - "-instances=print-nanny:us-central1:print-nanny-blog=tcp:3306"
        securityContext:
          runAsNonRoot: true
        ports:
          - containerPort: 3306
      - image: us.gcr.io/print-nanny/ghost:latest
        name: ghost
        env:
        - name: url
          value: "https://help.print-nanny.com"
        - name: mail__transport
          value: SMTP
        - name: mail__options__service
          value: Mailgun
        - name: mail__options__auth__user
          valueFrom:
            secretKeyRef:
              name: mailgun-smtp-auth
              key: user
        - name: mail__options__auth__pass
          valueFrom:
            secretKeyRef:
              name:  mailgun-smtp-auth
              key: password
        - name: mail__options__port
          value: "2525"
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: "127.0.0.1"
        - name: database__connection__user
          value: ghost
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name:  mysql-creds
              key: password
        - name: database__connection__database
          value: print_nanny_help
        ports:
        - containerPort: 2368
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: print-nanny-help-data
        livenessProbe:
          httpGet:
            path: /
            port: 2368
            httpHeaders:
              - name: X-Forwarded-Proto
                value: https
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /
            port: 2368
            httpHeaders:
              - name: X-Forwarded-Proto
                value: https
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
            - key: virtualhost.conf
              path: virtualhost/virtualhost.conf # dig directory
  volumeClaimTemplates:
  - metadata:
      name: print-nanny-help-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: print-nanny-help
spec:
  customRequestHeaders:
    headers:
    - "X-Forwarded-Proto:https"
---
apiVersion: v1
kind: Service
metadata:
  name: print-nanny-help
  labels:
    app: print-nanny-help
  annotations:
    cloud.google.com/backend-config: '{"default": "print-nanny-help"}'
spec:
  selector:
    app: print-nanny-help
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      server {
          listen       80;
          server_name  _;
          location / {
              root   html;
              index  index.html index.htm;
          }
      }
      include /etc/nginx/virtualhost/virtualhost.conf;
    }
  virtualhost.conf: |
    upstream app {
      server 127.0.0.1:2368;
      keepalive 1024;
    }
    server {
      listen 80 default_server;
      root /usr/local/app;
      access_log /dev/stdout;
      location / {
        proxy_set_header X-Forwarded-Proto "https";
        proxy_pass http://app/;
      }
    }
