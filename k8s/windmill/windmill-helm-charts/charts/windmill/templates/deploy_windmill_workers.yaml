apiVersion: apps/v1
kind: Deployment
metadata:
  name: windmill-workers
spec:
  replicas: {{ .Values.windmill.workerReplicas }}
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
  selector:
    matchLabels:
      app: windmill-worker
  template:
    metadata:
      labels: 
        app: windmill-worker
        container: windmill-worker
    spec:
      serviceAccountName: "{{ .Values.cloudsqlproxy.serviceAccount }}"
      terminationGracePeriodSeconds: 30
      containers:
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.29.0
        command:
          - "/cloud_sql_proxy"
          - "-term_timeout=30s"
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances={{ .Values.cloudsqlproxy.project }}:{{ .Values.cloudsqlproxy.region }}:{{ .Values.cloudsqlproxy.instance }}=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        ports:
          - containerPort: 5432
      - name: windmill-worker
       {{ if  not .Values.windmill.disableNsJail }}
       #because nsjail requires privileged access
        securityContext:
          privileged: true
        {{end}}
        {{ if .Values.enterprise.enabled }}
        image: ghcr.io/windmill-labs/windmill-ee
        {{ else }}
        image: ghcr.io/windmill-labs/windmill:main
        {{ end }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        - containerPort: 8001
        env:
        - name : "METRICS_ADDR"
          value: "true"
        - name: "DATABASE_URL"
          value: "{{ .Values.windmill.databaseUrl }}"
        - name: "BASE_URL"
          value: "{{ .Values.windmill.baseUrl }}"
        - name: "BASE_INTERNAL_URL"
          value: "{{ .Values.windmill.baseInternalUrl }}"
        - name: "RUST_LOG"
          value: "{{ .Values.windmill.rustLog }}"
        - name: "NUM_WORKERS"
          value: "{{ .Values.windmill.numWorkers }}"
        - name: "DISABLE_SERVER"
          value: "true"
        - name: "RUST_BACKTRACE"
          value: "{{ .Values.windmill.rustBacktrace }}"
        - name: "DISABLE_NUSER"
          value: "{{ .Values.windmill.disableNuser }}"
        - name: "DENO_PATH"
          value: "{{ .Values.windmill.denoPath }}"
        - name: "PYTHON_PATH"
          value: "{{ .Values.windmill.pythonPath }}"
        - name: "NSJAIL_PATH"
          value: "{{ .Values.windmill.nsjailPath }}"
        - name: "DISABLE_NSJAIL"
          value: "{{ .Values.windmill.disableNsjail }}"
        - name: "JSON_FMT"
          value: "true"
        {{ if .Values.windmill.enterpriseEnabled }}
        - name: "S3_CACHE_BUCKET"
          value: "{{ .Values.enterprise.s3CacheBucket }}"
        - name: "LICENSE_KEY"
          value: "{{ .Values.enterprise.licenseKey }}"
        - name: "RCLONE_S3_PROVIDER"
          value: "AWS"
        {{ end }}
      securityContext:
        runAsUser: 0
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-workers
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: windmill-worker
    container: windmill-worker
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-worker-metrics
spec:
  clusterIP: None
  ports:
  - port: 8001
    name: metrics
    protocol: TCP
  selector:
    app: windmill-worker
    container: windmill-worker
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: windmill
# spec:
#   externalTrafficPolicy: Cluster
#   ports:
#   - port: 80
#     name: http
#     protocol: TCP
#     targetPort: 8000
#     nodePort: 30080
#   # - port: 443
#   #   name: https
#   #   protocol: TCP
#   #   targetPort: 443
#   #   nodePort: 30081
#   selector:
#     app: windmill
#     container: caddy
#   sessionAffinity: None
#   type: NodePort
# status:
#   loadBalancer: {}
