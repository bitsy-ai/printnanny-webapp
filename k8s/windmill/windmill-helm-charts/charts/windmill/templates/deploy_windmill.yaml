apiVersion: apps/v1
kind: Deployment
metadata:
  name: windmill

spec:
  replicas: {{ .Values.windmill.frontendReplicas }}
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
  selector:
    matchLabels:
      app: windmill-app
  template:

    metadata:
      annotations:
        timestamp: {{ now | quote }}
      labels: 
        app: windmill-app
        container: windmill-app
    spec:
      terminationGracePeriodSeconds: 40
      containers:
      - name: windmill
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 30"]
      {{ if .Values.windmill.enableOauth }}
        volumeMounts:
        - name: config-volume
          mountPath: /usr/src/app/oauth.json
          subPath: oauth.json
       {{ end }}
        {{ if .Values.enterprise.enabled }}
        image: ghcr.io/windmill-labs/windmill-ee
        {{ else }}
        image: ghcr.io/windmill-labs/windmill:main
        {{ end }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        - containerPort: 8001
        readinessProbe:
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
          httpGet:
            host:
            scheme: HTTP
            path: /
            httpHeaders:
            - name: Host
              value: localhost
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name : "METRICS_ADDR"
          value: "true"
        - name: "DATABASE_URL"
          value: "{{ .Values.windmill.databaseUrl }}"
        - name: "BASE_URL"
          value: "{{ .Values.windmill.baseUrl }}"
        - name: "BASE_INTERNAL_URL"
          value: "{{ .Values.windmill.baseInternalUrl }}"
        - name: "RUST_LOG"
          value: "{{ .Values.windmill.rustLog }}"
        - name: "NUM_WORKERS"
          value: "0"
        - name: "RUST_BACKTRACE"
          value: "{{ .Values.windmill.rustBacktrace }}"
        - name: "DISABLE_NUSER"
          value: "{{ .Values.windmill.disableNuser }}"
        - name: "DENO_PATH"
          value: "{{ .Values.windmill.denoPath }}"
        - name: "PYTHON_PATH"
          value: "{{ .Values.windmill.pythonPath }}"
        - name: "NSJAIL_PATH"
          value: "{{ .Values.windmill.nsjailPath }}"
{{ if .Values.windmill.enableOauth }}
      volumes:
      - name: config-volume
        configMap:
          # Provide the name of the ConfigMap containing the files you want
          # to add to the container
          name: windmill-configmap
{{ end }}
      securityContext:
        runAsUser: 0
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-app
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: windmill-app
    container: windmill-app
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-app-metrics
  labels:
    operated-prometheus: "true"
spec:
  clusterIP: None
  ports:
  - port: 8001
    name: metrics
    protocol: TCP
  selector:
    app: windmill-app
    container: windmill-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: windmill
# spec:
#   externalTrafficPolicy: Cluster
#   ports:
#   - port: 80
#     name: http
#     protocol: TCP
#     targetPort: 8000
#     nodePort: 30080
#   # - port: 443
#   #   name: https
#   #   protocol: TCP
#   #   targetPort: 443
#   #   nodePort: 30081
#   selector:
#     app: windmill
#     container: caddy
#   sessionAffinity: None
#   type: NodePort
# status:
#   loadBalancer: {}
