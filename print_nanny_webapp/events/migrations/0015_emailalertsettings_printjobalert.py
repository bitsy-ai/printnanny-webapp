# Generated by Django 3.2.12 on 2022-08-01 18:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import print_nanny_webapp.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("devices", "0037_auto_20220731_1857"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("events", "0014_auto_20220801_0513"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailAlertSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_dt", models.DateTimeField(auto_now_add=True)),
                ("updated_dt", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(default=True)),
                (
                    "event_types",
                    print_nanny_webapp.utils.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("PrintQuality", "Quality control alerts"),
                                ("PrintStarted", "Triggered on print job start"),
                                ("PrintDone", "Triggered when print job is finished"),
                                (
                                    "PrintProgress",
                                    "Triggered when print job progress reaches %percent",
                                ),
                                ("PrintPaused", "Triggered when print job is paused"),
                                (
                                    "PrintCancelled",
                                    "Triggered when print job is cancelled",
                                ),
                                (
                                    "PrintStatus",
                                    "Print status updates (percent progress, paused, resumed, failed)",
                                ),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        default=["PrintQuality", "PrintDone", "PrintProgress"],
                        size=None,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintJobAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True)),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("octoprint", "Events originating from OctoPrint"),
                            ("printnanny_os", "Event originating from PrintNanny OS"),
                            (
                                "printnanny_cloud",
                                "Events originating from PrintNanny Cloud services",
                            ),
                            ("mainsail", "Events originating from moonraker"),
                        ],
                        max_length=32,
                    ),
                ),
                ("subject", models.CharField(max_length=255)),
                ("payload", models.JSONField(default=dict)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("PrintQuality", "Quality control alerts"),
                            ("PrintStarted", "Triggered on print job start"),
                            ("PrintDone", "Triggered when print job is finished"),
                            (
                                "PrintProgress",
                                "Triggered when print job progress reaches %percent",
                            ),
                            ("PrintPaused", "Triggered when print job is paused"),
                            ("PrintCancelled", "Triggered when print job is cancelled"),
                            (
                                "PrintStatus",
                                "Print status updates (percent progress, paused, resumed, failed)",
                            ),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "pi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="devices.pi"
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_events.printjobalert_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_dt"],
                "abstract": False,
                "index_together": {("pi", "source", "subject", "created_dt")},
            },
        ),
    ]
