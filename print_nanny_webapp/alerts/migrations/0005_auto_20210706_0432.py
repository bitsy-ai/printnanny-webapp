# Generated by Django 3.2.5 on 2021-07-06 04:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import print_nanny_webapp.alerts.models
import print_nanny_webapp.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("telemetry", "0020_alter_printerevent_printer_state"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("remote_control", "0024_alter_printsession_print_job_status"),
        ("alerts", "0004_alter_alertsettings_event_types"),
    ]

    operations = [
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_alerts.alert_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="TestAlert",
            fields=[
                (
                    "alert_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="alerts.alert",
                    ),
                ),
                (
                    "alert_method",
                    models.CharField(
                        choices=[
                            ("UI", "Print Nanny UI"),
                            ("EMAIL", "Email notifications"),
                            ("DISCORD", "Discord channel (webhook)"),
                            ("PARTNER_3DGEEKS", "3D Geeks mobile app"),
                        ],
                        max_length=36,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            (
                                "PrintNannyWebapp",
                                "Test triggered via Print Nanny UI or webapp",
                            )
                        ],
                        max_length=36,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("alerts.alert",),
        ),
        migrations.CreateModel(
            name="VideoStatusAlert",
            fields=[
                (
                    "alert_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="alerts.alert",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[("VideoDone", "{{ GCODE_FILE }} - timelapse done üé•")],
                        max_length=36,
                    ),
                ),
                (
                    "alert_method",
                    models.CharField(
                        choices=[
                            ("UI", "Print Nanny UI"),
                            ("EMAIL", "Email notifications"),
                            ("DISCORD", "Discord channel (webhook)"),
                            ("PARTNER_3DGEEKS", "3D Geeks mobile app"),
                        ],
                        max_length=36,
                    ),
                ),
                (
                    "annotated_video",
                    models.FileField(
                        upload_to=print_nanny_webapp.utils.fields.file_field_upload_to
                    ),
                ),
                (
                    "octoprint_device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.octoprintdevice",
                    ),
                ),
                (
                    "print_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.printsession",
                    ),
                ),
            ],
            bases=("alerts.alert",),
        ),
        migrations.CreateModel(
            name="PrintStatusAlert",
            fields=[
                (
                    "alert_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="alerts.alert",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("PrintDone", "{{ GCODE_FILE }} - job finished ‚úÖ"),
                            ("PrintFailed", "{{ GCODE_FILE }} - job failed ‚ùå"),
                            ("PrintPaused", "{{ GCODE_FILE }} - job paused ‚è∏Ô∏è"),
                            ("PrintResumed", "{{ GCODE_FILE }} - job resumed ‚èØÔ∏è"),
                            ("PrintStarted", "{{ GCODE_FILE }} - job started üèÅ"),
                            ("PrintCancelled", "{{ GCODE_FILE }} - job cancelled ‚ùå"),
                        ],
                        max_length=36,
                    ),
                ),
                (
                    "alert_method",
                    models.CharField(
                        choices=[
                            ("UI", "Print Nanny UI"),
                            ("EMAIL", "Email notifications"),
                            ("DISCORD", "Discord channel (webhook)"),
                            ("PARTNER_3DGEEKS", "3D Geeks mobile app"),
                        ],
                        max_length=36,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="telemetry.telemetryevent",
                    ),
                ),
                (
                    "octoprint_device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.octoprintdevice",
                    ),
                ),
                (
                    "print_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.printsession",
                    ),
                ),
            ],
            bases=("alerts.alert",),
        ),
        migrations.CreateModel(
            name="PrintProgressAlert",
            fields=[
                (
                    "alert_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="alerts.alert",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            (
                                "PrintProgress",
                                "{{ GCODE_FILE }} - {{ PRINT_PROGRESS }}% complete ‚è≥",
                            )
                        ],
                        max_length=36,
                    ),
                ),
                (
                    "alert_method",
                    models.CharField(
                        choices=[
                            ("UI", "Print Nanny UI"),
                            ("EMAIL", "Email notifications"),
                            ("DISCORD", "Discord channel (webhook)"),
                            ("PARTNER_3DGEEKS", "3D Geeks mobile app"),
                        ],
                        max_length=36,
                    ),
                ),
                ("print_progress", models.IntegerField()),
                ("needs_review", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="telemetry.telemetryevent",
                    ),
                ),
                (
                    "octoprint_device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.octoprintdevice",
                    ),
                ),
                (
                    "print_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="remote_control.printsession",
                    ),
                ),
            ],
            bases=("alerts.alert",),
        ),
        migrations.AddConstraint(
            model_name="videostatusalert",
            constraint=models.UniqueConstraint(
                fields=("print_session", "alert_method", "event_type"),
                name="unique_video_status_alert",
            ),
        ),
        migrations.AddConstraint(
            model_name="printstatusalert",
            constraint=models.UniqueConstraint(
                fields=("print_session", "alert_method", "event_type"),
                name="unique_print_status_alert",
            ),
        ),
        migrations.AddConstraint(
            model_name="printprogressalert",
            constraint=models.UniqueConstraint(
                fields=("print_session", "alert_method", "print_progress"),
                name="unique_print_progress_alert",
            ),
        ),
    ]
