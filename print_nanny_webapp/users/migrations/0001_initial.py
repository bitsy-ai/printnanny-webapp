# Generated by Django 3.1.3 on 2020-12-05 23:45

from django.db import migrations, models
import django.utils.timezone
import print_nanny_webapp.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InviteRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('referrer', models.CharField(help_text='How did you hear about us?', max_length=255)),
                ('print_frequency', models.CharField(choices=[('DAILY', 'At least once per day'), ('WEEKLY', 'At least once per week'), ('MONTHLY', 'At least once per month'), ('YEARLY', 'Occasionally, a few times a year')], max_length=32)),
                ('printer_models', print_nanny_webapp.users.models.ChoiceArrayField(base_field=models.CharField(choices=[('PRUSA', 'Prusa'), ('CREALITY', 'Creality'), ('FLASHFORGE', 'Flashforge'), ('MONOPRICE', 'Monoprice'), ('FORMLABS', 'Formlabs'), ('LULZBOT', 'LulzBot'), ('ULTIMAKER', 'Ultimaker'), ('MARKFORGED', 'Markforged'), ('PEOPOLY', 'Peopoly'), ('TOYBOX', 'Toybox'), ('MAKERBOT', 'Makerbot'), ('DREMEL', 'Dremel'), ('OTHER', 'Other')], max_length=32), help_text='Check all that apply', size=None)),
                ('num_printers', models.IntegerField()),
                ('printer_models_other', models.CharField(max_length=255)),
                ('filament_type', print_nanny_webapp.users.models.ChoiceArrayField(base_field=models.CharField(choices=[('PLA', 'PLA'), ('PETG', 'PETG'), ('ABS', 'ASA/ABS'), ('BVOH', 'Soluble (BVOH)'), ('WOOD', 'Wood Composite'), ('Metal', 'Metal Composite'), ('OTHER', 'Other')], max_length=32), help_text='Check all that apply', size=None)),
                ('other', models.TextField(blank=True, help_text='If you checked "Other", say more about your printer and materials', null=True)),
                ('business', models.BooleanField(help_text='Have you ever sold a finished print or source models?')),
                ('num_employees', models.IntegerField(blank=True, help_text='If you peddle your wares, many people (besides you) support the business?', null=True)),
                ('usage', models.TextField(help_text='Describe your 3D printer usage. What type of things to you make?')),
                ('worst', models.TextField(blank=True, help_text='Alternatively, tell us the WORST part of 3D printing today', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
