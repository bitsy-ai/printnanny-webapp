# Generated by Django 3.2.9 on 2022-01-14 22:25

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ("devices", "0001_initial"),
        ("devices", "0002_auto_20211031_1732"),
        ("devices", "0003_device_release_channel"),
        ("devices", "0004_auto_20211113_1935"),
        ("devices", "0005_auto_20211113_2227"),
        ("devices", "0006_auto_20211114_0515"),
        ("devices", "0007_auto_20211114_0519"),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                ("hostname", models.CharField(max_length=255)),
                ("public_key", models.TextField()),
                ("fingerprint", models.CharField(max_length=255)),
                ("cloudiot_device_name", models.CharField(max_length=255)),
                ("cloudiot_device_path", models.CharField(max_length=255)),
                ("cloudiot_device_num_id", models.BigIntegerField()),
                ("os_version", models.CharField(max_length=255)),
                ("os", models.CharField(max_length=255)),
                ("kernel_version", models.CharField(max_length=255)),
                ("hardware", models.CharField(default="UNKNOWN", max_length=255)),
                ("revision", models.CharField(default="UNKNOWN", max_length=255)),
                ("model", models.CharField(default="UNKNOWN", max_length=255)),
                ("serial", models.CharField(default="UNKNOWN", max_length=255)),
                ("cores", models.IntegerField()),
                ("ram", models.BigIntegerField()),
                (
                    "cpu_flags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), size=None
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="devices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": set(),
            },
        ),
        migrations.CreateModel(
            name="PrinterController",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="printer_controllers",
                        to="devices.device",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_devices.printercontroller_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="printer_controllers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "software",
                    models.CharField(
                        choices=[("OctoPrint", "OctoPrint printer controller")],
                        default="OctoPrint",
                        max_length=12,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="PrinterProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="OctoprintController",
            fields=[
                ("python_version", models.CharField(max_length=255)),
                ("pip_version", models.CharField(max_length=255)),
                ("virtualenv", models.CharField(max_length=255, null=True)),
                ("octoprint_version", models.CharField(max_length=255)),
                ("plugin_version", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("devices.printercontroller",),
        ),
        migrations.CreateModel(
            name="Camera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "camera_type",
                    models.CharField(
                        choices=[
                            (
                                "Raspberry Pi Camera Module",
                                "Raspberry Pi Camera Module",
                            ),
                            ("Raspberry Pi USB Camera", "Raspberry Pi USB Camera"),
                            (
                                "Generic RTSP/RTMP IP Camera",
                                "Generic RTSP/RTMP IP Camera",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                ("camera_source", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="CloudiotDevice",
            fields=[
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("num_id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("id", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DeviceConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("ansible_extra_vars", models.JSONField(default={})),
                (
                    "release_channel",
                    models.CharField(
                        choices=[
                            ("stable", "Stable mainline release channel"),
                            ("nightly", "Nightly developer release channel"),
                        ],
                        default="stable",
                        max_length=8,
                    ),
                ),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                "ordering": ["-created_dt"],
            },
        ),
        migrations.CreateModel(
            name="DevicePublicKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("public_key", models.TextField()),
                ("public_key_checksum", models.CharField(max_length=255)),
                ("fingerprint", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DeviceState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                (
                    "ansible_state",
                    models.CharField(
                        choices=[
                            ("runningSoftware update is running", "Running"),
                            ("successSoftware is up-to-date", "Success"),
                            ("failedSoftware update failed", "Failed"),
                        ],
                        default="runningSoftware update is running",
                        max_length=64,
                    ),
                ),
                ("ansible_facts", models.JSONField(default={})),
                ("ansible_extra_vars", models.JSONField(default={})),
                (
                    "release_channel",
                    models.CharField(
                        choices=[
                            ("stable", "Stable mainline release channel"),
                            ("nightly", "Nightly developer release channel"),
                        ],
                        default="stable",
                        max_length=8,
                    ),
                ),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                "ordering": ["-created_dt"],
            },
        ),
        migrations.CreateModel(
            name="CameraController",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "camera_type",
                    models.CharField(
                        choices=[
                            (
                                "Raspberry Pi Camera Module",
                                "Raspberry Pi Camera Module",
                            ),
                            ("Raspberry Pi USB Camera", "Raspberry Pi USB Camera"),
                            (
                                "Generic RTSP/RTMP IP Camera",
                                "Generic RTSP/RTMP IP Camera",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                ("camera_source", models.CharField(max_length=255)),
                (
                    "camera_source_type",
                    models.CharField(
                        choices=[
                            ("MJPG Streamer", "Software-encoded JPG frames over HTTP"),
                            ("Gstreamer", "Hardware-encoded h264"),
                        ],
                        max_length=255,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OctoprintPrinterProfile",
            fields=[
                ("axes_e_inverted", models.BooleanField(null=True)),
                ("axes_e_speed", models.IntegerField(null=True)),
                ("axes_x_speed", models.IntegerField(null=True)),
                ("axes_x_inverted", models.BooleanField(null=True)),
                ("axes_y_inverted", models.BooleanField(null=True)),
                ("axes_y_speed", models.IntegerField(null=True)),
                ("axes_z_inverted", models.BooleanField(null=True)),
                ("axes_z_speed", models.IntegerField(null=True)),
                ("extruder_count", models.IntegerField(null=True)),
                ("extruder_nozzle_diameter", models.FloatField(null=True)),
                ("extruder_shared_nozzle", models.BooleanField(null=True)),
                ("heated_bed", models.BooleanField(null=True)),
                ("heated_chamber", models.BooleanField(null=True)),
                ("model", models.CharField(blank=True, max_length=255, null=True)),
                ("volume_custom_box", models.JSONField(default=dict)),
                ("volume_depth", models.FloatField(null=True)),
                ("volume_formfactor", models.CharField(max_length=255, null=True)),
                ("volume_height", models.FloatField(null=True)),
                ("volume_origin", models.CharField(max_length=255, null=True)),
                ("volume_width", models.FloatField(null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("devices.printerprofile",),
        ),
        migrations.AddConstraint(
            model_name="device",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("user", "hostname"),
                name="unique_device_hostname_per_user",
            ),
        ),
        migrations.DeleteModel(
            name="CameraController",
        ),
        migrations.DeleteModel(
            name="OctoprintController",
        ),
        migrations.DeleteModel(
            name="OctoprintPrinterProfile",
        ),
        migrations.DeleteModel(
            name="PrinterProfile",
        ),
        migrations.AddField(
            model_name="devicestate",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="devices.device"
            ),
        ),
        migrations.AddField(
            model_name="devicepublickey",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="public_keys",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="deviceconfig",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="devices.device"
            ),
        ),
        migrations.AddField(
            model_name="cloudiotdevice",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cloudiot_devices",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="camera",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cameras",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="camera",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.RemoveField(
            model_name="device",
            name="cloudiot_device_name",
        ),
        migrations.RemoveField(
            model_name="device",
            name="cloudiot_device_num_id",
        ),
        migrations.RemoveField(
            model_name="device",
            name="cloudiot_device_path",
        ),
        migrations.RemoveField(
            model_name="device",
            name="cpu_flags",
        ),
        migrations.RemoveField(
            model_name="device",
            name="fingerprint",
        ),
        migrations.RemoveField(
            model_name="device",
            name="kernel_version",
        ),
        migrations.RemoveField(
            model_name="device",
            name="os",
        ),
        migrations.RemoveField(
            model_name="device",
            name="os_version",
        ),
        migrations.RemoveField(
            model_name="device",
            name="public_key",
        ),
        migrations.AddConstraint(
            model_name="devicepublickey",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("device",),
                name="unique_public_key_per_device",
            ),
        ),
        migrations.AddConstraint(
            model_name="cloudiotdevice",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("device",),
                name="unique_cloud_iot_device_per_device",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="camera",
            unique_together={("user", "name")},
        ),
        migrations.AddField(
            model_name="device",
            name="release_channel",
            field=models.CharField(
                choices=[
                    ("stable", "Stable mainline release channel"),
                    ("nightly", "Nightly developer release channel"),
                ],
                default="stable",
                max_length=8,
            ),
        ),
        migrations.CreateModel(
            name="DeviceInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("hardware", models.CharField(max_length=255)),
                ("revision", models.CharField(max_length=255)),
                ("model", models.CharField(max_length=255)),
                ("serial", models.CharField(max_length=255)),
                ("cores", models.IntegerField()),
                ("ram", models.BigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("public_key", models.TextField()),
                ("public_key_checksum", models.CharField(max_length=255)),
                ("fingerprint", models.CharField(max_length=255)),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.RemoveField(
            model_name="device",
            name="cores",
        ),
        migrations.RemoveField(
            model_name="device",
            name="hardware",
        ),
        migrations.RemoveField(
            model_name="device",
            name="model",
        ),
        migrations.RemoveField(
            model_name="device",
            name="ram",
        ),
        migrations.RemoveField(
            model_name="device",
            name="revision",
        ),
        migrations.RemoveField(
            model_name="device",
            name="serial",
        ),
        migrations.DeleteModel(
            name="DevicePublicKey",
        ),
        migrations.AddField(
            model_name="license",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="licenses",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="deviceinfo",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="devices.device"
            ),
        ),
        migrations.AddConstraint(
            model_name="license",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("device",),
                name="unique_license_per_device",
            ),
        ),
        migrations.AlterField(
            model_name="device",
            name="hostname",
            field=models.CharField(
                default="printnanny",
                help_text="Please enter the hostname you set in the Raspberry Pi Imager's Advanced Options menu (without .local extension)",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="device",
            name="release_channel",
            field=models.CharField(
                choices=[
                    ("stable", "Stable mainline release channel"),
                    ("nightly", "Nightly developer release channel"),
                ],
                default="stable",
                help_text="WARNING: you should only use the nightly developer channel when guided by Print Nanny staff! This unstable channel is intended for QA and verifying bug fixes.",
                max_length=8,
            ),
        ),
        migrations.AddField(
            model_name="deviceinfo",
            name="machine_id",
            field=models.CharField(default="123abc", max_length=255),
            preserve_default=False,
        ),
        # migrations.AddField(
        #     model_name='device',
        #     name='bootstrap_release',
        #     field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='releases.release'),
        # ),
        migrations.AddConstraint(
            model_name="deviceinfo",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("device",),
                name="unique_device_info_per_device",
            ),
        ),
        migrations.AlterField(
            model_name="deviceinfo",
            name="hardware",
            field=models.CharField(
                help_text="Populated from /proc/cpuinfo HARDWARE", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="deviceinfo",
            name="machine_id",
            field=models.CharField(
                help_text="Populated from /etc/machine-id", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="deviceinfo",
            name="model",
            field=models.CharField(
                help_text="Populated from /proc/cpuinfo MODEL", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="deviceinfo",
            name="revision",
            field=models.CharField(
                help_text="Populated from /proc/cpuinfo REVISION", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="deviceinfo",
            name="serial",
            field=models.CharField(
                help_text="Populated from /proc/cpuinfo SERIAL", max_length=255
            ),
        ),
    ]
